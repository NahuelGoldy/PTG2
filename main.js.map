{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/shared/domain/post.ts","webpack:///./src/app/shared/services/people.service.ts","webpack:///./src/app/ui/content/content.component.html","webpack:///./src/app/ui/content/content.component.scss","webpack:///./src/app/ui/content/content.component.ts","webpack:///./src/app/ui/header/header.component.html","webpack:///./src/app/ui/header/header.component.scss","webpack:///./src/app/ui/header/header.component.ts","webpack:///./src/app/ui/layout/layout.component.html","webpack:///./src/app/ui/layout/layout.component.scss","webpack:///./src/app/ui/layout/layout.component.ts","webpack:///./src/app/ui/sidebar/sidebar.component.html","webpack:///./src/app/ui/sidebar/sidebar.component.scss","webpack:///./src/app/ui/sidebar/sidebar.component.ts","webpack:///./src/app/ui/ui.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<app-layout></app-layout>\\n\\n\"","module.exports = \"\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'PTG2';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { UiModule } from './ui/ui.module';\nimport { PeopleService } from './shared/services/people.service';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    UiModule\n  ],\n  providers: [PeopleService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export class Post {\r\n  message: string;\r\n  author: string;\r\n  created_at: string;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient} from '@angular/common/http';\r\nimport {Person} from '../domain/person';\r\n\r\n@Injectable()\r\nexport  class  PeopleService {\r\n\r\n  private people: Person[] = [];\r\n  private selectedPerson: Person;\r\n\r\n  constructor(private httpClient:  HttpClient) {\r\n  }\r\n\r\n  getPeople() {\r\n    return this.people;\r\n  }\r\n\r\n  setPeople(people: Person[]) {\r\n    this.people.push(...people);\r\n  }\r\n\r\n  getSelectedPerson(): Person {\r\n    return this.selectedPerson;\r\n  }\r\n\r\n  setSelectedPerson(person: Person) {\r\n    this.selectedPerson = person;\r\n  }\r\n\r\n  initialize() {\r\n    return this.httpClient.get('./assets/data/people.json');\r\n  }\r\n}\r\n","module.exports = \"<div>\\n\\n  <h1> {{peopleService.getSelectedPerson().name}}</h1>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-xs-12 col-lg-12\\\">\\n      <div class=\\\"card card-default content-table\\\">\\n        <div class=\\\"card-header card-info\\\">\\n          <i class=\\\"fa fa-info-circle\\\"></i> Information\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-sm-4 col-lg-4 img-wrapper\\\">\\n              <div class=\\\"row\\\">\\n                <img src=\\\"{{peopleService.getSelectedPerson().img}}\\\">\\n              </div>\\n              <div class=\\\"row\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-info\\\" (click)=\\\"toggleMessageFormFlag()\\\">{{btnText}}</button>\\n              </div>\\n            </div>\\n            <div class=\\\"col-sm-8 col-lg-8\\\">\\n              <div class=\\\"row rating-wrapper\\\">\\n                <div class=\\\"col-sm-3 col-lg-3\\\">\\n                  <h6>Rating:</h6>\\n                </div>\\n                <div class=\\\"col-sm-9 col-lg-6\\\">\\n                  <i *ngFor=\\\"let h of counter(peopleService.getSelectedPerson().rating)\\\" class=\\\"fa fa-heart\\\"></i>\\n                </div>\\n              </div>\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-sm-12 col-lg-12\\\">\\n                  <p class=\\\"description\\\">{{peopleService.getSelectedPerson().Description}}</p>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div *ngIf=\\\"!showMessageForm\\\" class=\\\"row\\\">\\n    <div class=\\\"col-xs-12 col-lg-6\\\">\\n      <div class=\\\"card card-default content-table\\\">\\n        <div class=\\\"card-header card-success\\\">\\n          <i class=\\\"fa fa-thumbs-up\\\"></i> Likes\\n        </div>\\n        <table class=\\\"table table-bordered table-striped\\\">\\n          <tbody>\\n          <tr *ngFor=\\\"let like of peopleService.getSelectedPerson().Likes\\\" style=\\\"text-align: center;\\\">\\n            <td>{{like}}</td>\\n          </tr>\\n          </tbody>\\n        </table>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"col-xs-12 col-lg-6\\\">\\n      <div class=\\\"card card-default content-table\\\">\\n        <div class=\\\"card-header card-danger\\\">\\n          <i class=\\\"fa fa-thumbs-down\\\"></i> Dislikes\\n        </div>\\n        <table class=\\\"table table-bordered table-striped\\\">\\n          <tbody>\\n          <tr *ngFor=\\\"let dislike of peopleService.getSelectedPerson().Dislikes\\\" style=\\\"text-align: center;\\\">\\n            <td>{{dislike}}</td>\\n          </tr>\\n          </tbody>\\n        </table>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  <div *ngIf=\\\"showMessageForm\\\" class=\\\"row\\\">\\n    <div class=\\\"col-xs-12 col-lg-6\\\">\\n\\n      <form>\\n        <label>Author: </label>\\n        <input class=\\\"form-control mr-sm-2\\\" type=\\\"text\\\" placeholder=\\\"Your name (optional)\\\"\\n               id=\\\"author\\\" [(ngModel)]=\\\"messageInput.author\\\" name=\\\"author\\\" #author=\\\"ngModel\\\" />\\n\\n        <label>Message: </label>\\n        <textarea class=\\\"form-control mr-sm-2\\\" placeholder=\\\"Your message\\\"\\n                  id=\\\"message\\\" [(ngModel)]=\\\"messageInput.message\\\" name=\\\"message\\\" #message=\\\"ngModel\\\" >\\n        </textarea>\\n\\n        <button id=\\\"btn-submit-msg\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"submitMessage()\\\">Submit</button>\\n      </form>\\n    </div>\\n\\n    <div class=\\\"col-xs-12 col-lg-6\\\">\\n      <div class=\\\"card card-default content-table\\\">\\n        <div class=\\\"card-header card-primary\\\">\\n          <i class=\\\"fa fa-comment\\\"></i> Messages\\n        </div>\\n        <p *ngFor=\\\"let post of peopleService.getSelectedPerson().messages\\\" >\\n          <i></i> \\\"{{post.message}}\\\"\\n          <span class=\\\"float-right text-muted small\\\"><em>{{post.author}}, {{post.created_at | timeAgo}}</em></span>\\n        </p>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \".card-success,\\n.card-danger,\\n.card-primary,\\n.card-info {\\n  color: #fff;\\n  font-weight: bold; }\\n\\n.content-item {\\n  padding: 1%; }\\n\\n.content-table {\\n  margin: 1%; }\\n\\n.table {\\n  margin-bottom: 0; }\\n\\n.img-wrapper {\\n  text-align: center; }\\n\\n.img-wrapper .row {\\n    display: contents; }\\n\\n.rating-wrapper {\\n  padding: 5%;\\n  text-align: center; }\\n\\n.rating-wrapper h6 {\\n    padding-top: 2%; }\\n\\n.rating-wrapper i {\\n    font-size: 2rem;\\n    margin-right: 1%;\\n    color: red; }\\n\\nh1 {\\n  font-size: 2rem;\\n  text-align: center;\\n  font-family: \\\"Segoe UI\\\", sans-serif; }\\n\\nimg {\\n  border-radius: 10%;\\n  margin: 3% 5%; }\\n\\np {\\n  margin: 1rem !important; }\\n\\nform {\\n  padding: 0 5% 4% 5%; }\\n\\nlabel {\\n  font-weight: 500;\\n  margin-top: 3%; }\\n\\n#btn-submit-msg, label {\\n  margin-top: 5%;\\n  width: 100%; }\\n\\n.card-primary {\\n  background-color: #0275d8;\\n  border-color: #0275d8; }\\n\\n.card-primary .card-header,\\n  .card-primary .card-footer {\\n    background-color: transparent; }\\n\\n.card-success {\\n  background-color: #5cb85c;\\n  border-color: #5cb85c; }\\n\\n.card-success .card-header,\\n  .card-success .card-footer {\\n    background-color: transparent; }\\n\\n.card-info {\\n  background-color: #17a2b8;\\n  border-color: #17a2b8; }\\n\\n.card-info .card-header,\\n  .card-info .card-footer {\\n    background-color: transparent; }\\n\\n.card-danger {\\n  background-color: #d9534f;\\n  border-color: #d9534f; }\\n\\n.card-danger .card-header,\\n  .card-danger .card-footer {\\n    background-color: transparent; }\\n\"","import {Component, OnInit} from '@angular/core';\nimport {PeopleService} from '../../shared/services/people.service';\nimport {Post} from '../../shared/domain/post';\nimport {isNullOrUndefined} from \"util\";\n\n@Component({\n  selector: 'app-content',\n  templateUrl: './content.component.html',\n  styleUrls: ['./content.component.scss']\n})\nexport class ContentComponent implements OnInit {\n  isDataAvailable = false;\n  showMessageForm = false;\n  messageInput: Post;\n  btnText: string;\n\n  constructor(public peopleService: PeopleService) {\n    this.btnText = 'LEAVE A MESSAGE!';\n    this.messageInput = new Post();\n  }\n\n  ngOnInit() {\n    this.isDataAvailable = true;\n  }\n\n  counter(i: number) {\n    return new Array(i);\n  }\n\n  toggleMessageFormFlag() {\n    this.showMessageForm = !this.showMessageForm;\n    this.btnText = (this.btnText === 'LEAVE A MESSAGE!') ? 'BACK TO PREFERENCES' : 'LEAVE A MESSAGE!';\n  }\n\n  submitMessage() {\n    if(isNullOrUndefined(this.messageInput.author)) this.messageInput.author = 'Anonymus';\n    this.messageInput.created_at = new Date().toISOString();\n    this.peopleService.getSelectedPerson().messages.push(this.messageInput);\n    this.messageInput = new Post();\n  }\n}\n","module.exports = \"<nav class=\\\"navbar navbar-dark bg-dark\\\">\\n  <button class=\\\"navbar-toggler navbar-toggler-right\\\" (click)=\\\"toggleSidebar()\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n  <div class=\\\"navbar-nav\\\">\\n    <a href=\\\"javascript:void(0)\\\" class=\\\"nav-link\\\">\\n      <i class=\\\"fa fa-user\\\"></i> Nahuel Goldy <i class=\\\"fa fa-sort-down\\\"></i>\\n    </a>\\n  </div>\\n</nav>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  toggleSidebar() {\n    const dom: any = document.querySelector('body');\n    dom.classList.toggle('push-right');\n  }\n\n}\n","module.exports = \"<app-header></app-header>\\n<app-sidebar *ngIf=\\\"isDataAvailable\\\" [people]=\\\"peopleService.getPeople()\\\"></app-sidebar>\\n<div class=\\\"main-container\\\">\\n  <app-content *ngIf=\\\"isDataAvailable\\\"></app-content>\\n</div>\\n\"","module.exports = \".main-container {\\n  background-color: #eeeeee;\\n  margin-left: 235px;\\n  padding: 15px;\\n  -ms-overflow-x: hidden;\\n  overflow-x: hidden;\\n  overflow-y: scroll;\\n  position: relative;\\n  overflow: hidden; }\\n\\n@media screen and (max-width: 992px) {\\n  .main-container {\\n    margin-left: 0px !important; } }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { PeopleService } from '../../shared/services/people.service';\nimport { Person } from '../../shared/domain/person';\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.scss']\n})\nexport class LayoutComponent implements OnInit {\n  isDataAvailable = false;\n\n  constructor(public peopleService: PeopleService) {\n    // async initialization of the service\n    this.peopleService.initialize().subscribe((data: { People: Person[] }) => {\n      data.People.forEach(p => {\n        p.hide = false;\n        p.messages = [];\n      });\n      this.peopleService.setPeople(data.People);\n      this.peopleService.setSelectedPerson(data.People[0]);\n      this.isDataAvailable = true;\n    });\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<nav class=\\\"sidebar\\\" [ngClass]=\\\"{sidebarPushRight: isActive}\\\">\\n\\n  <div style=\\\"text-align: center;\\\">\\n    <form >\\n      <input class=\\\"form-control mr-sm-2\\\" type=\\\"text\\\" placeholder=\\\"Search\\\"\\n             id=\\\"typedinput\\\" [(ngModel)]=\\\"typed\\\" name=\\\"typedinput\\\" #typedinput=\\\"ngModel\\\" (input)=\\\"inputChanged()\\\" />\\n    </form>\\n  </div>\\n\\n  <div *ngFor=\\\"let person of people\\\">\\n    <ul class=\\\"list-group\\\">\\n      <a class=\\\"list-group-item\\\" (click)=\\\"personSelected(person)\\\" *ngIf=\\\"!person.hide\\\">\\n        {{ person.name }}\\n        <i class=\\\"fa fa-angle-double-right\\\"></i>&nbsp;\\n      </a>\\n    </ul>\\n  </div>\\n</nav>\\n\"","module.exports = \".sidebar {\\n  border-radius: 0;\\n  position: absolute;\\n  z-index: 1000;\\n  top: 55px;\\n  left: 235px;\\n  width: 235px;\\n  height: 100%;\\n  margin-left: -235px;\\n  border: none;\\n  border-radius: 0;\\n  overflow-y: auto;\\n  background-color: #222;\\n  bottom: 0;\\n  overflow-x: hidden;\\n  padding-bottom: 40px; }\\n  .sidebar .list-group a.list-group-item {\\n    text-align: center;\\n    background: #222;\\n    border: 0;\\n    border-radius: 0;\\n    color: #fff;\\n    text-decoration: none; }\\n  .sidebar .list-group a.list-group-item .fa {\\n      margin-left: 2%; }\\n  .sidebar .list-group a:hover {\\n    background: #484848;\\n    color: #fff;\\n    cursor: pointer; }\\n  @media screen and (max-width: 992px) {\\n  .sidebar {\\n    top: 54px;\\n    left: 0px; } }\\n\"","import {Component, Input} from '@angular/core';\nimport {Person} from '../../shared/domain/person';\nimport {PeopleService} from '../../shared/services/people.service';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.scss']\n})\nexport class SidebarComponent {\n  @Input() people: Person[];\n  typed: string;\n\n  isActive = false;\n\n  constructor(private peopleService: PeopleService) {\n    this.typed = '';\n  }\n\n  personSelected(person: Person) {\n    this.peopleService.setSelectedPerson(person);\n\n    // toggle sidebar\n    const dom: any = document.querySelector('body');\n    dom.classList.toggle('push-right');\n  }\n\n  inputChanged() {\n    this.people.forEach(p => {\n        if(this.typed !== '' && p.name.toLowerCase().search(this.typed) === -1) {\n          p.hide = true;\n        } else {\n          p.hide = false;\n        }\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LayoutComponent } from './layout/layout.component';\nimport { HeaderComponent } from './header/header.component';\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport { ContentComponent } from './content/content.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {TimeAgoPipe} from 'time-ago-pipe';\n\n@NgModule({\n  imports: [\n      CommonModule,\n      FormsModule,\n      ReactiveFormsModule,\n  ],\n  declarations: [\n      LayoutComponent,\n      HeaderComponent,\n      SidebarComponent,\n      ContentComponent,\n      TimeAgoPipe\n  ],\n  exports: [\n      LayoutComponent\n  ]\n})\nexport class UiModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}